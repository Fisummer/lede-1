--- a/src/aead.c
+++ b/src/aead.c
@@ -540,11 +540,6 @@ aead_decrypt_all(buffer_t *ciphertext, c
     uint8_t *salt = cipher_ctx.salt;
     memcpy(salt, ciphertext->data, salt_len);
 
-    if (ppbloom_check((void *)salt, salt_len) == 1) {
-        LOGE("[udp] crypto: AEAD: repeat salt detected");
-        return CRYPTO_ERROR;
-    }
-
     aead_cipher_ctx_udp_set_key(&cipher_ctx, 0);
 
     size_t plen = plaintext->len;
@@ -568,8 +563,6 @@ aead_decrypt_all(buffer_t *ciphertext, c
     if (err)
         return CRYPTO_ERROR;
 
-    ppbloom_add((void *)salt, salt_len);
-
     brealloc(ciphertext, plaintext->len, capacity);
     memcpy(ciphertext->data, plaintext->data, plaintext->len);
     ciphertext->len = plaintext->len;
@@ -749,11 +742,6 @@ aead_decrypt(buffer_t *ciphertext, ciphe
 
         aead_cipher_ctx_set_subkey(cipher_ctx, 0);
 
-        if (ppbloom_check((void *)cipher_ctx->salt, salt_len) == 1) {
-            LOGE("crypto: AEAD: repeat salt detected");
-            return CRYPTO_ERROR;
-        }
-
         memmove(cipher_ctx->chunk->data, cipher_ctx->chunk->data + salt_len,
                 cipher_ctx->chunk->len - salt_len);
         cipher_ctx->chunk->len -= salt_len;
@@ -761,7 +749,6 @@ aead_decrypt(buffer_t *ciphertext, ciphe
         cipher_ctx->init = 1;
 
     } else if (cipher_ctx->init == 1) {
-        ppbloom_add((void *)cipher_ctx->salt, salt_len);
         cipher_ctx->init = 2;
     }
 
--- a/src/crypto.c
+++ b/src/crypto.c
@@ -108,19 +108,6 @@ crypto_init(const char *password, const
         FATAL("Failed to initialize sodium");
     }
 
-    // Initialize IV or salt bloom filter
-#ifdef ANDROID
-    ppbloom_init(FS_BF_ENTRIES__ANDROID, FS_BF_ERR_RATE__ANDROID);
-#else /* !ANDROID */
-
-#ifdef MODULE_REMOTE
-    ppbloom_init(FS_BF_ENTRIES__SERVER, FS_BF_ERR_RATE__SERVER);
-#else /* !ANDROID && !MODULE_REMOTE */
-    ppbloom_init(FS_BF_ENTRIES__CLIENT, FS_BF_ERR_RATE__CLIENT);
-#endif
-
-#endif
-
     if (method != NULL) {
         for (i = 0; i < STREAM_CIPHER_NUM; i++)
             if (strcmp(method, supported_stream_ciphers[i]) == 0) {
--- a/src/stream.c
+++ b/src/stream.c
@@ -475,11 +475,6 @@ stream_decrypt_all(buffer_t *ciphertext,
     uint8_t *nonce = cipher_ctx.nonce;
     memcpy(nonce, ciphertext->data, nonce_len);
 
-    if (ppbloom_check((void *)nonce, nonce_len) == 1) {
-        LOGE("[udp] crypto: stream: repeat IV detected");
-        return CRYPTO_ERROR;
-    }
-
     cipher_ctx_set_nonce(&cipher_ctx, nonce, nonce_len, 0);
 
     if (cipher->method >= SALSA20) {
@@ -504,8 +499,6 @@ stream_decrypt_all(buffer_t *ciphertext,
     dump("NONCE", ciphertext->data, nonce_len);
 #endif
 
-    ppbloom_add((void *)nonce, nonce_len);
-
     brealloc(ciphertext, plaintext->len, capacity);
     memcpy(ciphertext->data, plaintext->data, plaintext->len);
     ciphertext->len = plaintext->len;
@@ -560,14 +553,9 @@ stream_decrypt(buffer_t *ciphertext, cip
         cipher_ctx->init    = 1;
 
         if (cipher->method >= RC4_MD5) {
-            if (ppbloom_check((void *)nonce, nonce_len) == 1) {
-                LOGE("crypto: stream: repeat nonce detected");
-                return CRYPTO_ERROR;
-            }
         }
     } else if (cipher_ctx->init == 1) {
         if (cipher->method >= RC4_MD5) {
-            ppbloom_add((void *)cipher_ctx->nonce, cipher->nonce_len);
             cipher_ctx->init = 2;
         }
     }
